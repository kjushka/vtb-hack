version: "3.5"
networks:
  bridge-network:
    driver: bridge

services:
  market_service:
    build:
      dockerfile: market-service.Dockerfile
    depends_on:
      - postgres
    links:
      - postgres
    container_name: market_service
    environment:
      #PG
      - PG_HOST=postgres
      - PG_PORT=5432
      - PG_MARKET_USER=postgres
      - PG_MARKET_PASS=postgres
      - PG_MARKET_DATABASE=market_service
      #USER_SERVICE
      - USER_SERVICE_HOST=user_service
      - USER_SERVICE_PORT=8081
    ports:
      - 8080:8080
    networks:
      - bridge-network
    volumes:
      - ./public/market_products:/tmp/public/market_products
    restart: always

  user_service:
    build:
      dockerfile: user-service.Dockerfile
    depends_on:
      - postgres
    links:
      - postgres
    container_name: user_service
    environment:
      #PG
      - PG_HOST=postgres
      - PG_PORT=5432
      - PG_MARKET_USER=postgres
      - PG_MARKET_PASS=postgres
      - PG_MARKET_DATABASE=user_service
      #PRODUCT_SERVICE
      - MARKET_SERVICE_HOST=market_service
      - MARKET_SERVICE_PORT=8080
      #AUTH_KEY
      - AUTH_KEY=dnjJNNGjd998R#df
      #common
      - SAVE_IMAGES_PATH=/tmp/public/users
    ports:
      - 8081:8081
    networks:
      - bridge-network
    volumes:
      - ./public/users:/tmp/public/users
    restart: always

  postgres:
    container_name: postgres
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    #  - ./postgres_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 50
    restart: always
    networks:
      - bridge-network