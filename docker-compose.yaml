version: "3.8"
networks:
  bridge-network:
    driver: bridge

services:
  market_service:
    build:
      dockerfile: market-service.Dockerfile
    depends_on:
      pgs:
        condition: service_healthy
    container_name: market_service
    environment:
      #PG
      - PG_HOST=postgres
      - PG_PORT=5432
      - PG_MARKET_USER=postgres
      - PG_MARKET_PASS=postgres
      - PG_MARKET_DATABASE=market_service
      #USER_SERVICE
      - USER_SERVICE_HOST=user_service
      - USER_SERVICE_PORT=8081
      #MONEY_SERVICE
      - MONEY_SERVICE_HOST=money_service
      - MONEY_SERVICE_PORT=8082
      #AUTH_KEY
      - AUTH_KEY=dnjJNNGjd998R#df
      #common
      - SAVE_IMAGES_PATH=/tmp/var/public/users
    ports:
      - 8080:8080
    networks:
      - bridge-network
    #volumes:
    #  - ./public/market_products:/tmp/var/public/market_products
    user: root
    restart: always

  user_service:
    build:
      dockerfile: user-service.Dockerfile
    depends_on:
      pgs:
        condition: service_healthy
    container_name: user_service
    environment:
      #PG
      - PG_HOST=postgres
      - PG_PORT=5432
      - PG_MARKET_USER=postgres
      - PG_MARKET_PASS=postgres
      - PG_MARKET_DATABASE=user_service
      #MARKET_SERVICE
      - MARKET_SERVICE_HOST=market_service
      - MARKET_SERVICE_PORT=8080
      #MONEY_SERVICE
      - MONEY_SERVICE_HOST=money_service
      - MONEY_SERVICE_PORT=8082
      #AUTH_KEY
      - AUTH_KEY=dnjJNNGjd998R#df
      #common
      - SAVE_IMAGES_PATH=/tmp/var/public/users
    ports:
      - 8081:8081
    networks:
      - bridge-network
    #volumes:
    #  - ./public/users:/tmp/var/public/users
    user: root
    restart: always

  money_service:
    build:
      context: .
      dockerfile: money-service.Dockerfile
    container_name: money_service
    environment:
      - PYTHONUNBUFFERED=1
    ports:
      - 8082:8082
    networks:
      - bridge-network
    depends_on:
      pgs:
        condition: service_healthy
    user: root

  auth_service:
    build:
      dockerfile: auth-service.Dockerfile
    container_name: auth_service
    environment:
      - PYTHONUNBUFFERED=1
    ports:
      - 8000:8000
    networks:
      - bridge-network
    depends_on:
      pgs:
        condition: service_healthy
    user: root
    restart: always

  front:
    build:
      dockerfile: front.Dockerfile
    container_name: front
    ports:
      - 3000:3000
    networks:
      - bridge-network
    depends_on:
      pgs:
        condition: service_healthy
    user: root
    restart: always

  pgs:
    container_name: postgres
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./postgres_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 50
    restart: always
    networks:
      - bridge-network